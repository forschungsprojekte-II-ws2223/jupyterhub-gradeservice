version: "3.9"

services:
  jupyterlab:
    build: jupyterlab
    image: jupyterlab_img
    container_name: jupyterlab-throaway
    network_mode: none
    command: echo

  hub-db:
    image: postgres:alpine3.16
    container_name: jupyterhub-db
    networks:
      - default
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${DB_VOLUME_CONTAINER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "db:${DB_VOLUME_CONTAINER}"

  hub:
    depends_on:
      - hub-db
    links:
      - hub-db
    build: hub
    restart: unless-stopped
    container_name: jupyterhub
    networks:
      - default
      - proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "data:${DATA_VOLUME_CONTAINER}"
    environment:
      DOCKER_JUPYTER_IMAGE: jupyterlab_img
      DOCKER_NETWORK_NAME: ${DOCKER_NETWORK_NAME}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: hub-db
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.jupyterhub.entrypoints=http"
      - "traefik.http.routers.jupyterhub.rule=Host(`${HOST}`) && PathPrefix(`/jupyter`)"
      - "traefik.http.middlewares.jupyterhub-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jupyterhub.middlewares=jupyterhub-https-redirect"
      - "traefik.http.routers.jupyterhub-secure.entrypoints=https"
      - "traefik.http.routers.jupyterhub-secure.rule=Host(`${HOST}`) && PathPrefix(`/jupyter`)"
      - "traefik.http.routers.jupyterhub-secure.tls=true"
      - "traefik.http.routers.jupyterhub-secure.tls.certresolver=http"
      - "traefik.http.routers.jupyterhub-secure.service=jupyterhub"
      - "traefik.http.services.jupyterhub.loadbalancer.server.port=8000"
      - "traefik.http.routers.jupyterhub-secure.middlewares=secHeaders@file"

volumes:
  data:
    name: jupyterhub_data
    driver: local
  db:
    name: jupyterhub_db
    driver: local

networks:
  default:
    name: ${DOCKER_NETWORK_NAME}
  proxy:
    external: true